// Code generated by MockGen. DO NOT EDIT.
// Source: pubsub/pubsub.go

// Package sweepermock is a generated GoMock package.
package sweepermock

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockSweeper is a mock of Sweeper interface.
type MockSweeper struct {
	ctrl     *gomock.Controller
	recorder *MockSweeperMockRecorder
}

// MockSweeperMockRecorder is the mock recorder for MockSweeper.
type MockSweeperMockRecorder struct {
	mock *MockSweeper
}

// NewMockSweeper creates a new mock instance.
func NewMockSweeper(ctrl *gomock.Controller) *MockSweeper {
	mock := &MockSweeper{ctrl: ctrl}
	mock.recorder = &MockSweeperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSweeper) EXPECT() *MockSweeperMockRecorder {
	return m.recorder
}

// Sweep mocks base method.
func (m *MockSweeper) Sweep(ctx context.Context, dispatchedIDs, failedIDs []int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Sweep", ctx, dispatchedIDs, failedIDs)
	ret0, _ := ret[0].(error)
	return ret0
}

// Sweep indicates an expected call of Sweep.
func (mr *MockSweeperMockRecorder) Sweep(ctx, dispatchedIDs, failedIDs interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Sweep", reflect.TypeOf((*MockSweeper)(nil).Sweep), ctx, dispatchedIDs, failedIDs)
}
